// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication3.Data;

#nullable disable

namespace WebApplication3.Migrations
{
    [DbContext(typeof(PctoDbContext))]
    [Migration("20240606144620_SampleData")]
    partial class SampleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("WebApplication3.Data.ClassRoom", b =>
                {
                    b.Property<int>("ClassRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClassRoomId");

                    b.ToTable("ClassRooms");

                    b.HasData(
                        new
                        {
                            ClassRoomId = 1,
                            Description = "1A"
                        },
                        new
                        {
                            ClassRoomId = 2,
                            Description = "2A"
                        },
                        new
                        {
                            ClassRoomId = 3,
                            Description = "3A"
                        },
                        new
                        {
                            ClassRoomId = 4,
                            Description = "4A"
                        });
                });

            modelBuilder.Entity("WebApplication3.Data.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassRoomId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            ClassRoomId = 1,
                            Name = "A",
                            Surname = "A"
                        },
                        new
                        {
                            StudentId = 2,
                            ClassRoomId = 2,
                            Name = "B",
                            Surname = "B"
                        },
                        new
                        {
                            StudentId = 3,
                            ClassRoomId = 3,
                            Name = "C",
                            Surname = "C"
                        },
                        new
                        {
                            StudentId = 4,
                            ClassRoomId = 4,
                            Name = "D",
                            Surname = "D"
                        },
                        new
                        {
                            StudentId = 5,
                            ClassRoomId = 1,
                            Name = "E",
                            Surname = "E"
                        },
                        new
                        {
                            StudentId = 6,
                            ClassRoomId = 2,
                            Name = "F",
                            Surname = "F"
                        },
                        new
                        {
                            StudentId = 7,
                            ClassRoomId = 3,
                            Name = "G",
                            Surname = "G"
                        },
                        new
                        {
                            StudentId = 8,
                            ClassRoomId = 4,
                            Name = "H",
                            Surname = "H"
                        });
                });

            modelBuilder.Entity("WebApplication3.Data.Student", b =>
                {
                    b.HasOne("WebApplication3.Data.ClassRoom", "ClassRoom")
                        .WithMany("Students")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");
                });

            modelBuilder.Entity("WebApplication3.Data.ClassRoom", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
